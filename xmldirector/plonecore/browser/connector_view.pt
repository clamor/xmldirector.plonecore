<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      lang="en"
      metal:use-macro="context/main_template/macros/master"
      i18n:domain="xmldirector.plonecore">
<body>

<metal:slot fill-slot="style_slot">
    <link rel="stylesheet" type="text/css" tal:attributes="href string:$portal_url/++resource++xmldirector.plonecore/jsgrid/jsgrid.min.css" />
    <link rel="stylesheet" type="text/css" tal:attributes="href string:$portal_url/++resource++xmldirector.plonecore/jsgrid/jsgrid-theme.min.css" />
    <link rel="stylesheet" type="text/css" tal:attributes="href string:$portal_url/++resource++xmldirector.plonecore/styles.css" />
</metal:slot>

<metal:slot fill-slot="javascript_head_slot">
    <script type="text/javascript" charset="utf8" tal:attributes="src string:$portal_url/++resource++xmldirector.plonecore/jsgrid/jsgrid.min.js"></script>
</metal:slot>

<metal:main fill-slot="content-core">
  <metal:content-core define-macro="content-core">

      <div id="table-info"></div>
      <table id="table">
      </table>

      <div id="no-data" class="error" i18n:translate="">The root collection does not contain any data</div>

      <div id="table-actions">
          <button class="action-create-collection button" name="action-create-collection" i18n:translate="">Create Collection</button>
          <button class="action-import button" name="action-import" i18n:translate="">Import</button>
          <button class="action-refresh button" name="action-refresh" i18n:translate="">Refresh</button>
      </div>

      <script type="text/javascript" 
          tal:define="authenticator context/@@authenticator;
                      auth_value python: authenticator.authenticator('authenticator')"
          tal:content="string: AUTHENTICATOR = '${auth_value}'"
          >
      </script>
      <script type="text/javascript" tal:content="string: var URL = '${context/absolute_url}'"></script>
      <script type="text/javascript" tal:content="string: var SUBPATH = '${options/subpath}'"></script>
      <script type="text/javascript" tal:content="string: var FILTER_BY = '${options/filter_by}'"></script>
      <script type="text/javascript" 
          tal:define="is_plone5 python: str(view.is_plone5()).lower()"
          tal:content="string: var IS_PLONE5 = $is_plone5"></script>
      <script type="text/javascript">

        PAGING = IS_PLONE5; 

        DATA = new Array;

        function get_data(filter) {
            var url = URL + "/@@connector-folder-contents?subpath=" + SUBPATH + '&amp;filter_by=' + FILTER_BY;
            if (DATA.length == 0) {
                $.ajax({
                    url: url,
                    dataType: 'json',
                    async: false,
                    method: 'GET',
                    success: function(result) {
                        DATA.push.apply(DATA, result['dirs']);
                        DATA.push.apply(DATA, result['files']);

                        /* Update #collection-list */
                        if (result['dirs'].length > 0) {
                            var select = $('#collection-list');
                            $(result['dirs']).each(function(index, d) {
                                if (d['title'] != '..') 
                                    select.append(sprintf('<option value="%s">%s</option>', d['title'], d['title']));
                            });
                            if (select.find('option').length == 0)
                                $('#action-rename-collection').remove();
                        } else {
                            $('#action-rename-collection').remove();
                        }
                        
                        if (DATA.length == 0) {
                            $('#table').fadeOut();
                            $('#no-data').fadeIn();
                        } else {
                            $('#table').fadeIn();
                            $('#no-data').fadeOut();
                        }
                    } 
                });
            }

            var result = $.grep(DATA, function(item, idx) {
                for (var key in filter) {
                    var value = filter[key];
                    if (value.length > 0) {
                        if (item[key].indexOf(value) == -1)
                            return false;
                    }
                }
                return true;
            });
            return result;
        }

        function title_renderer(value, item) {
            var url = item['url'];
            var title = item['title'];
            var fullpath = item['fullpath'];
            var type = item['type'];
            var s = '';
                
            var title = item['title'];
            if (item['type'] == 'directory') {
                s += sprintf('<a class="type-%s action-chdir" data-subpath="%s">%s</a>', type, fullpath, title);
                if (title != '..') {
                    s += sprintf('<a class="action-delete" title="Remove" data-subpath="%s" data-id="%s">', SUBPATH, title);
                    s += '<img src="++resource++xmldirector.plonecore/images/remove.png" title="Remove collection"/>'
                    s += '</a>';
                    s += sprintf('<a title="Rename" class="action-rename" data-fullpath="%s" data-title="%s"><img src="++resource++xmldirector.plonecore/images/rename.png" ></a>', fullpath, title);
                    s += sprintf('<a title="ZIP Download" class="action-zip-download" data-fullpath="%s" data-title="%s"><img src="++resource++xmldirector.plonecore/images/zip.png" ></a>', fullpath, title);
                        }
                return s;
            } else {
                var remove_url = item['remove_url'];
                var editable = item['editable'];
                s += sprintf('<a class="type-%s" href="%s">%s</a>', type, url, title);
                s += sprintf('\
                            <a class="action-delete" title="Remove" data-subpath="%s" data-id="%s">\
                            <img src="++resource++xmldirector.plonecore/images/remove.png" title="Remove item" i18n:attributes="title"/> </a>', 
                        SUBPATH, title);
                s += sprintf('<a title="Rename" class="action-rename" data-fullpath="%s" data-title="%s"><img src="++resource++xmldirector.plonecore/images/rename.png" ></a>', fullpath, title);
                s += sprintf('<a title="Download" class="action-download" data-fullpath="%s" data-title="%s"><img src="++resource++xmldirector.plonecore/images/download.png" ></a>', fullpath, title);
                if (editable) {
                    var edit_url = item['edit_url'];
                s += sprintf('<a href="%s" title="Edit" class="action-edit" ><img src="++resource++xmldirector.plonecore/images/edit.png" /></a>', edit_url);
                }
                return s;
            }
                ;
            return s;
        }

        function init_table() {            
            $('#table').jsGrid({
                width: "100%",
                /*                height: "600px",*/
                autoload: true,
                sorting: true,
                paging: PAGING,
                filtering: true,
                controller: {
                    loadData: get_data
                },

                fields: [
                    { name: "title", title: "Name", type: "text", width: 200,  itemTemplate: title_renderer},
                    /*
                    { name: "type", title: "Type", type: "text", width: 40, css: 'field-type'},
                    */
                    { name: "size", title: "Size", type: "text", width: 40, css: 'field-size', filtering: false},
                    { name: "modified", title: "Last modified", type: "text", width: 50, css: 'field-modified', filtering: false },
                    /*
                    { name: "st_mode_text", title: "Permissions", type: "text", sorting: false, size: 50 , filtering: false},
                    { name: "actions", type: "text", title: "Actions", sorting: false, itemTemplate: action_renderer, filtering: false}
                    */
                ]
            });
        }

        function refresh_table() {
            DATA =  new Array;
            $("#table").jsGrid("refresh");
            init_table();
        }

        function ajax_success(result) {
            spinner_stop();
            $('#table-info').removeClass('status-ok status-error').addClass('status-ok');
            $('#table-info').text(result).stop(true, true).show().fadeOut(5000);
            refresh_table();
        }
        
        function ajax_error(result) {
            spinner_stop();
            $('#table-info').removeClass('status-ok status-error').addClass('status-error');
            $('#table-info').text(result.responseText).stop(true, true).show().fadeOut(5000);
            }

        function spinner_start() {
            $('#table-info').html('<img src="++resource++xmldirector.plonecore/images/spinning.gif"/>')
        }

        function spinner_stop() {
            $('#table-info').html('');
        }


        $(document).ready(function() {

            $('body').on('click', '.action-chdir', function(e) {
                e.preventDefault();
                SUBPATH = $(this).data('subpath');
                if (SUBPATH.indexOf('/') == 0)
                    SUBPATH = SUBPATH.substring(1, SUBPATH.length);
                url = sprintf("%s/@@view/%s",URL, SUBPATH);
                var state = {url: url} 
                window.history.pushState(state, null, url);
                refresh_table();
            });

            $('body').on('click', '.action-download', function(e) {
                e.preventDefault();
                var fullpath = $(this).data('fullpath');
                var url = sprintf("%s/@@filemanager-download?filename:utf8:ustring=%s", URL, fullpath);
                window.location.href = url;
            });

            $('body').on('click', '.action-zip-download', function(e) {
                e.preventDefault();
                var fullpath = $(this).data('fullpath');
                var url = sprintf("%s/@@filemanager-zip-download?subpath:utf8:ustring=%s", URL, fullpath);
                window.location.href = url;
            });

            $('.action-refresh').on('click', function(e) {
                e.preventDefault();
                spinner_start();
                refresh_table();
                spinner_stop();
                });

            $('body').on('click', '.action-import', function(e) {
                var url = sprintf("%s/@@connector-zip-import?subpath=%s", URL, SUBPATH)
                window.location.href = url;
            });
            
            $('body').on('click', '.action-create-collection', function(e) {
                e.preventDefault();
                var new_id = window.prompt('Create new collection');
                if (new_id != null) {
                    var url = sprintf('%s/@@filemanager-create-collection', URL);
                    spinner_start();
                    $.ajax({
                        type: 'GET',
                        url: url,
                        data: {
                            'subpath:utf8:ustring': SUBPATH,
                            'new_id:utf8:ustring': new_id
                        },
                        success: ajax_success,
                        error: ajax_error
                    });
                }
            });
            
            $('body').on('click', '.action-rename', function(e) {
                e.preventDefault();
                var title = $(this).data('title');
                var fullpath = $(this).data('fullpath');
                var msg = sprintf('Rename "%s" to', title);
                var new_id = window.prompt(msg, title);
                var url = sprintf('%s/@@filemanager-rename', URL);
                if (new_id != null) {
                    spinner_start();
                    $.ajax({
                        type: 'GET',
                        url: url,
                        data: {
                            'subpath:utf8:ustring': SUBPATH,
                            'old_id:utf8:ustring': title,
                            'new_id:utf8:ustring': new_id
                        },
                        success: ajax_success,
                        error: ajax_error
                    });
                }
            });
            
            $('body').on('click', '.action-delete', function(e) {
                e.preventDefault();
                var title = $(this).data('title');
                var subpath = $(this).data('subpath');
                var id = $(this).data('id');
                var msg = sprintf('Do you really want to delete "%s/%s" to', subpath, id);
                if (confirm(msg)) {
                    var url = sprintf('%s/@@filemanager-delete', URL);
                    spinner_start();
                    $.ajax({
                        type: 'GET',
                        url: url,
                        data: {
                            'subpath:utf8:ustring': SUBPATH,
                            'id:utf8:ustring': id
                        },
                        success: ajax_success,
                        error: ajax_error
                    });
                }
            });

            init_table();
        });
      </script>

  </metal:content-core>
</metal:main>

</body>
</html>

